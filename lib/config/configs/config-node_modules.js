module.exports = function(config, options) {
  var addDistAndSrc, addModulesLocPaths, appModules, log, node_modules, path, rbModules, test;
  path = require('path');
  log = require(config.req.helpers + "/log");
  test = require(config.req.helpers + "/test")();
  rbModules = ['body-parser', 'express', 'jasmine-expect', 'q'];
  appModules = options.server.node_modules || [];
  if (config.httpProxy.length) {
    rbModules.push('http-proxy-middleware');
  }
  node_modules = {
    rb: {
      modules: rbModules,
      dist: {
        dir: null,
        modules: {}
      },
      src: {
        dir: null,
        relPath: null,
        modules: {}
      }
    },
    app: {
      modules: appModules,
      dist: {
        dir: null,
        modules: {}
      },
      src: {
        dir: null,
        relPath: null,
        modules: {}
      }
    }
  };
  addDistAndSrc = function() {
    var appOrRb, dir, k2, nmDir, results, v1, v2;
    nmDir = 'node_modules';
    results = [];
    for (appOrRb in node_modules) {
      v1 = node_modules[appOrRb];
      results.push((function() {
        var results1;
        results1 = [];
        for (k2 in v1) {
          v2 = v1[k2];
          if (!(k2 === 'dist' || k2 === 'src')) {
            continue;
          }
          switch (k2) {
            case 'dist':
              dir = config.dist[appOrRb].server.scripts.dir;
              results1.push(v2.dir = path.join(dir, nmDir));
              break;
            case 'src':
              dir = appOrRb === 'rb' ? 'root' : 'dir';
              dir = config[appOrRb][dir];
              v2.dir = path.join(dir, nmDir);
              v2.relPath = nmDir;
              if (appOrRb === 'app') {
                continue;
              }
              results1.push(v2.relPath = path.join(nmDir, config.rb.name, nmDir));
              break;
            default:
              results1.push(void 0);
          }
        }
        return results1;
      })());
    }
    return results;
  };
  addDistAndSrc();
  addModulesLocPaths = function(appOrRb) {
    var _path, loc, module, results, v;
    results = [];
    for (appOrRb in node_modules) {
      v = node_modules[appOrRb];
      results.push((function() {
        var i, len, ref, results1;
        ref = node_modules[appOrRb].modules;
        results1 = [];
        for (i = 0, len = ref.length; i < len; i++) {
          module = ref[i];
          results1.push((function() {
            var j, len1, ref1, results2;
            ref1 = ['dist', 'src'];
            results2 = [];
            for (j = 0, len1 = ref1.length; j < len1; j++) {
              loc = ref1[j];
              _path = path.join(node_modules[appOrRb][loc].dir, module);
              results2.push(node_modules[appOrRb][loc].modules[module] = _path);
            }
            return results2;
          })());
        }
        return results1;
      })());
    }
    return results;
  };
  addModulesLocPaths();
  config.node_modules = node_modules;
  test.log('true', config.node_modules, 'add node_modules to config');
  return config;
};
