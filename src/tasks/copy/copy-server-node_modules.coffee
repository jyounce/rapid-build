module.exports = (config, gulp) ->
	q           = require 'q'
	promiseHelp = require "#{config.req.helpers}/promise"

	# tasks
	# =====
	copyTask = (src, dest) ->
		defer = q.defer()
		gulp.src src
			.pipe gulp.dest dest
			.on 'end', ->
				defer.resolve()
		defer.promise

	removeJasmineExpect = ->
		return promiseHelp.get() if config.env.is.testServer
		rbModules = config.node_modules.rb.modules
		for i, module of rbModules
			if module is 'jasmine-expect'
				rbModules.splice i, 1
				break
		promiseHelp.get()

	copyModules = ->
		tasks = []
		defer = q.defer()

		for appOrRb, v of config.node_modules
			continue if appOrRb is 'rb' and config.exclude.default.server.files
			for module in v.modules
				src  = config.glob.node_modules[appOrRb].src[module]
				dest = v.dist.modules[module]
				do (src, dest) ->
					tasks.push ->
						copyTask src, dest

		tasks.reduce(q.when, q()).done -> defer.resolve()
		defer.promise

	# API
	# ===
	api =
		runTask: -> # synchronously
			defer = q.defer()
			tasks = [
				-> removeJasmineExpect()
				-> copyModules()
			]
			tasks.reduce(q.when, q()).done -> defer.resolve()
			defer.promise

	# return
	# ======
	api.runTask()