module.exports = (config, gulp) ->
	q           = require 'q'
	promiseHelp = require "#{config.req.helpers}/promise"

	# tasks
	# =====
	copyTask = (src, dest) ->
		defer = q.defer()
		gulp.src src
			.pipe gulp.dest dest
			.on 'end', ->
				defer.resolve()
		defer.promise

	# removeJasmineExpect = -> # todo: fix, not used since npm 3 support
	# 	return promiseHelp.get() if config.env.is.testServer
	# 	rbModules = config.node_modules.rb.modules
	# 	for i, module of rbModules
	# 		if module is 'jasmine-expect'
	# 			rbModules.splice i, 1
	# 			break
	# 	promiseHelp.get()

	copyModules = ->
		tasks = []
		defer = q.defer()

		for appOrRb in ['app','rb']
			continue if appOrRb is 'rb' and config.exclude.default.server.files
			src  = config.glob.src[appOrRb].server.node_modules.all
			dest = config.dist[appOrRb].server.node_modules.dir
			do (src, dest) ->
				tasks.push ->
					copyTask src, dest

		tasks.reduce(q.when, q()).done -> defer.resolve()
		defer.promise

	# API
	# ===
	api =
		runTask: -> # synchronously
			defer = q.defer()
			tasks = [
				# -> removeJasmineExpect()
				-> copyModules()
			]
			tasks.reduce(q.when, q()).done -> defer.resolve()
			defer.promise

	# return
	# ======
	api.runTask()